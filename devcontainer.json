// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// "runArgs": ["--env=DISPLAY=${env:DISPLAY}", "--env=QT_X11_NO_MITSHM=1", "--volume=/tmp/.X11-unix:/tmp/.X11-unix:rw", "--env=XAUTHORITY=${env:XAUTH}", "--volume=${env:XAUTH}:${env:XAUTH}", "--runtime=nvidia"],
	"runArgs": ["--env=DISPLAY=${env:DISPLAY}", "--env=QT_X11_NO_MITSHM=1", "--volume=/tmp/.X11-unix:/tmp/.X11-unix:rw", "--env=XAUTHORITY=${env:XAUTH}", "--volume=${env:XAUTH}:${env:XAUTH}", "--env=SDL_VIDEODRIVER:${env:SDL_VIDEODRIVER}", "--env=SDL_HINT_CUDA_DEVICE:0"],

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	"workspaceFolder": "/home/stonefish/build"

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
